From aa1016f811199e307b8f403bd8d3c85b7fd0826d Mon Sep 17 00:00:00 2001
From: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
Date: Fri, 30 Nov 2018 14:14:57 +0100
Subject: [PATCH 286/287] tps65218.c: Remove tps65218_reg_pwr_down() function

This function requires a static copy of the last
registered device, handled by this driver.
(Usually there is only one, which is not unregistered.
That's why it worked)
This hack also directly touched the chip registers.

This patch removes the evil hack from drivers/mfd/tps65218.c
and fixes its only user: arch/arm/mach-omap2/wusv.c
by adding a disable_load_switch() function
using a kernel-api compatible way to access the load-switch.

Now the drivers/mfd/tps65218.c has no wago-specific
adaptions anymore.

Signed-off-by: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
---
 arch/arm/mach-omap2/wusv.c   | 25 +++++++++++++++++++++----
 drivers/mfd/tps65218.c       | 29 -----------------------------
 include/linux/mfd/tps65218.h |  1 -
 3 files changed, 21 insertions(+), 34 deletions(-)

diff --git a/arch/arm/mach-omap2/wusv.c b/arch/arm/mach-omap2/wusv.c
index d72fcc7..b302c3d 100644
--- a/arch/arm/mach-omap2/wusv.c
+++ b/arch/arm/mach-omap2/wusv.c
@@ -23,7 +23,7 @@
 #include <linux/kobject.h>
 #include <linux/fs.h>
 #include <linux/interrupt.h>
-#include <linux/mfd/tps65218.h>
+#include <linux/regulator/consumer.h>
 #include <linux/leds.h>
 #include <asm/mach-types.h>
 
@@ -81,6 +81,23 @@ static struct of_device_id wusv_dt_ids[] = {
 };
 MODULE_DEVICE_TABLE(of, wusv_dt_ids);
 
+static void disable_load_switch(const char *name)
+{
+	struct regulator *regulator;
+	struct device *dev;
+
+	dev = bus_find_device_by_name(&i2c_bus_type, NULL, "0-0024");
+	if (!dev) {
+		pr_warn("tps65218 device not found");
+		return;
+	}
+	regulator = regulator_get(dev, name);
+	if (!regulator) {
+		pr_warn("LoadSwitch with name '%s' not found", name);
+		return;
+	}
+	regulator_disable(regulator);
+}
 
 void usv_active( unsigned long data )
 {
@@ -103,17 +120,17 @@ void usv_active( unsigned long data )
 
 	if (wusvset.pmic_LS1.set) {	
 		pr_debug("LS1 off\n");
-		tps65218_reg_pwr_down(wusvset.pmic_LS1.name);
+		disable_load_switch("vdd_LS1_MMC");
 	}
 
 	if (wusvset.pmic_LS2.set) {	
 		pr_debug("LS2 off\n");
-		tps65218_reg_pwr_down(wusvset.pmic_LS2.name);		
+		disable_load_switch("vdd_LS2_USB");
 	}
 
 	if (wusvset.pmic_LS3.set) {	
 		pr_debug("LS3 off\n");
-		tps65218_reg_pwr_down(wusvset.pmic_LS3.name);
+		disable_load_switch("vdd_LS3_FPGA_ETHERNET");
 	}
 	return;
 }
diff --git a/drivers/mfd/tps65218.c b/drivers/mfd/tps65218.c
index a68132c..ba610ad 100644
--- a/drivers/mfd/tps65218.c
+++ b/drivers/mfd/tps65218.c
@@ -33,8 +33,6 @@
 
 #define TPS65218_PASSWORD_REGS_UNLOCK   0x7D
 
-static struct tps65218 *tps_dev;
-
 /**
  * tps65218_reg_read: Read a single tps65218 register.
  *
@@ -127,31 +125,6 @@ int tps65218_clear_bits(struct tps65218 *tps, unsigned int reg,
 }
 EXPORT_SYMBOL_GPL(tps65218_clear_bits);
 
-int tps65218_reg_pwr_down(const char* name) {
-
-        int ret;
-
-        if (strcmp(name, "LS1_off") == 0) {
-		printk("LS1 switch off");
-                ret = tps65218_clear_bits(tps_dev, TPS65218_REG_ENABLE2,
-                                        TPS65218_ENABLE2_LS1_EN,
-                                        TPS65218_PROTECT_L1);
-	} else if (strcmp(name, "LS2_off") == 0) {
- 	 	printk("LS2 switch off");
-                ret = tps65218_clear_bits(tps_dev, TPS65218_REG_ENABLE2,
-                                        TPS65218_ENABLE2_LS2_EN,
-                                        TPS65218_PROTECT_L1);
-        } else if (strcmp(name, "LS3_off") == 0) {
-		printk("LS3 switch off");
-                ret = tps65218_clear_bits(tps_dev, TPS65218_REG_ENABLE2,
-                                        TPS65218_ENABLE2_LS3_EN,
-                                        TPS65218_PROTECT_L1);
-	}
-	return ret;
-}
-EXPORT_SYMBOL(tps65218_reg_pwr_down);
-
-
 static const struct regmap_range tps65218_yes_ranges[] = {
 	regmap_reg_range(TPS65218_REG_INT1, TPS65218_REG_INT2),
 	regmap_reg_range(TPS65218_REG_STATUS, TPS65218_REG_STATUS),
@@ -291,8 +264,6 @@ static int tps65218_probe(struct i2c_client *client,
 	if (ret < 0)
 		goto err_irq;
 
-	tps_dev = tps;
-
 	return 0;
 
 err_irq:
diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index 1920afd..2e7afcc 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -293,6 +293,5 @@ int tps65218_set_bits(struct tps65218 *tps, unsigned int reg,
 		unsigned int mask, unsigned int val, unsigned int level);
 int tps65218_clear_bits(struct tps65218 *tps, unsigned int reg,
 		unsigned int mask, unsigned int level);
-int tps65218_reg_pwr_down(const char* name);
 
 #endif /*  __LINUX_MFD_TPS65218_H */
-- 
2.7.4

