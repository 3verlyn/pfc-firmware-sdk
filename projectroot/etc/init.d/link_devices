#!/bin/bash
#
# link devices
#

# this script link devices from sys-fs to /dev/. The devices that
# need to be linked are defined in /etc/specific/.devs_to_link.

DEVS_TO_LINK="/etc/specific/.devs_to_link"
DEV_SEARCH_PATH="/sys/devices/"

# get configured kbus uart from sys-fs
KBUS_TTY_PFCXXX_DEV_NAME="$(cat /sys/class/wago/system/kbus_tty_device_name)"
KBUS_TTY_PFCXXX_LINK_NAME="/dev/ttyKbus"

# get configured rs232_485 uart from sys-fs
SERIAL_TTY_PFCXXX_DEV_NAME="$(cat /sys/class/wago/system/tty_rs232_485)"
SERIAL_TTY_PFCXXX_LINK_NAME="/dev/serial"

# get configured service uart from sys-fs
SERVICE_TTY_PFCXXX_DEV_NAME="$(cat /sys/class/wago/system/tty_service)"
SERVICE_TTY_PFCXXX_LINK_NAME="/dev/service"

# get configured modem uart from sys-fs
# the device does alwas exist in all PFCs and displays
GSM_MODEM_TTY_PFCXXX_DEV_NAME="ttyMdm0"
GSM_MODEM_TTY_PFCXXX_LINK_NAME="/dev/ttyRUNTIME66"

# led name mapping
LED_SRC_PATH="/sys/class/leds/"
LED_DEST_PATH="/dev/leds/"

if [ ! -f "${DEVS_TO_LINK}" ]; then
        echo "${DEVS_TO_LINK} not found"
        exit 1
fi

# create list of device-paths
index=0
device_paths=()

while read line; do
        tmp_dev=$(find ${DEV_SEARCH_PATH} -iname ${line})
        if [ ! -z "${tmp_dev}" ]; then
                device_paths[$index]=${tmp_dev}
                index=$(($index + 1))
        else
                echo "${line} not found in ${DEV_SEARCH_PATH}"
        fi
done <${DEVS_TO_LINK}

if [ ${#device_paths[@]} -eq 0 ]; then
        echo "no device-paths found"
        exit 1
fi

case $1 in

  start)
	# if device kbus0 exist the kernel supports KBus so from the userspace we can check if kbus0 exists
	if [ -e /dev/kbus0 ]
	then
        	if [ -c "/dev/${KBUS_TTY_PFCXXX_DEV_NAME}" ]; then
        	        ln -s /dev/${KBUS_TTY_PFCXXX_DEV_NAME} ${KBUS_TTY_PFCXXX_LINK_NAME}
	        else
	                echo "ERROR: could not set ${KBUS_TTY_PFCXXX_LINK_NAME}, kbus will not be active"
        	fi
	fi

        if [ -c "/dev/${SERIAL_TTY_PFCXXX_DEV_NAME}" ]; then
                ln -s /dev/${SERIAL_TTY_PFCXXX_DEV_NAME} ${SERIAL_TTY_PFCXXX_LINK_NAME}
        else
                echo "ERROR: could not set ${SERIAL_TTY_PFCXXX_LINK_NAME}, getty will fail"
        fi

        if [ -c "/dev/${SERVICE_TTY_PFCXXX_DEV_NAME}" ]; then
                ln -s /dev/${SERVICE_TTY_PFCXXX_DEV_NAME} ${SERVICE_TTY_PFCXXX_LINK_NAME}
        else
                echo "ERROR: could not set ${SERVICE_TTY_PFCXXX_LINK_NAME}, getty will fail"
        fi

        ln -s /dev/${GSM_MODEM_TTY_PFCXXX_DEV_NAME} ${GSM_MODEM_TTY_PFCXXX_LINK_NAME}

        for path in "${device_paths[@]}"; do
                ln -s ${path} /dev/
        done
                
        # ----- led naming -----
        # create folder 
        if [ ! -d "${LED_DEST_PATH}" ]; then
                mkdir ${LED_DEST_PATH}
        fi
        
        # link led names 
        if [ -d "${LED_DEST_PATH}" ]; then
                ln -s ${LED_SRC_PATH}* ${LED_DEST_PATH}
        else
                echo "ERROR: could not set ${LED_DEST_PATH}, leds will not work"
        fi
        
  ;;
  stop)
  ;;

esac
