#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018 WAGO Kontakttechnik GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: get_firmware_restore_packages
#
# Get available firmware restore packages for all devices
#
# Author: WAGO Kontakttechnik GmbH
#-----------------------------------------------------------------------------#

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_lib" ]; then
  echo "config_tool_lib missing"
  exit 255
fi

. /etc/config-tools/config_tool_lib

# show help-text if requested
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo
  echo "* Get available firmware restore packages for the significant devices in json format *"
  echo
  echo "Usage: get_firmware_restore_packages"
  echo
  exit $SUCCESS
fi

status=$SUCCESS

activePartitionMedium=`/etc/config-tools/get_filesystem_data active-partition-medium`

mediumOutputCount=0

printf "{ "

# get the existing devices one by one
deviceIndex=1
deviceMedium=`/etc/config-tools/get_filesystem_data medium-by-index $deviceIndex`
status=$?

while [ -n "$deviceMedium" ] && [ "$SUCCESS" = "$status" ]; do

  if [ "$deviceMedium" != "$activePartitionMedium" ] && [[ ! "$deviceMedium" =~ "internal-flash" ]]; then
  
    # check package states - return value SUCCESS -> package exists, CONFIG_FILE_MISSING -> package not exists, any other -> error
    /etc/config-tools/firmware_restore testmode=1 device-medium=$deviceMedium package-codesys=1
    codesysState=$?
    
    codesysAvailable="false"
    if [ "$SUCCESS" = "$codesysState" ]; then
      codesysAvailable="true"
    elif [ "$CONFIG_FILE_MISSING" != "$codesysState" ]; then
      status=$codesysState
    fi
    
    /etc/config-tools/firmware_restore testmode=1 device-medium=$deviceMedium package-system=1
    systemState=$?
    systemAvailable="false"
    if [ "$SUCCESS" = "$systemState" ]; then
      systemAvailable="true"
    elif [ "$CONFIG_FILE_MISSING" != "$systemState" ]; then
      status=$systemState
    fi
    
    /etc/config-tools/firmware_restore testmode=1 device-medium=$deviceMedium package-settings=1
    settingsState=$?
    settingsAvailable="false"
    if [ "$SUCCESS" = "$settingsState" ]; then
      settingsAvailable="true"
    elif [ "$CONFIG_FILE_MISSING" != "$settingsState" ]; then
      status=$settingsState
    fi
    
    if [ "$mediumOutputCount" != 0 ]; then
      printf ", "
    fi
    
    printf "\"$deviceMedium\": { "
    #printf "\"status\": %s, " $status
    printf "\"packageCodesys\": %s," $codesysAvailable
    printf "\"packageSystem\": %s," $systemAvailable
    printf "\"packageSettings\": %s" $settingsAvailable
    printf "} "
    
    mediumOutputCount=$((mediumOutputCount+1))

  fi

  # get next device
  deviceIndex=$(($deviceIndex + 1))
  deviceMedium=`/etc/config-tools/get_filesystem_data medium-by-index $deviceIndex`

done  

printf "}"

exit $status
