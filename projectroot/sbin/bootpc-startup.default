#!/bin/bash
#-----------------------------------------------------------------------------#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2019 WAGO Kontakttechnik GmbH & Co. KG
#-----------------------------------------------------------------------------#
#-----------------------------------------------------------------------------#
# BOOTP handling
#
# Starts bootp client and handles the parameters of a bootp reply.
#
# Author: WAGO Kontakttechnik GmbH & Co. KG.
#-----------------------------------------------------------------------------#

NETWORK_CONFIG=/etc/config-tools/network_config

set_ip_config () {
  local iface="$1"
  local source="$2"
  local address="$3"
  local mask="$4"
  local bcast="$5"

  local json_config='{"'$iface'":{"source":"'$source'", "ipaddr":"'$address'", "netmask":"'$mask'", "bcast":"'$bcast'"}}'

  $NETWORK_CONFIG --ip-config --set "${json_config}" --format json
}

interface_name=$1
DHCP_DATA_FILE_TEMPLATE=/tmp/dhcp-bootp-data-
FILE=$DHCP_DATA_FILE_TEMPLATE$interface_name

/sbin/route add default "$interface_name"

# Open firewall ports if firewall is enabled.
if [[ $(/etc/config-tools/firewall firewall --is-enabled) == "enabled" ]]; then

	/etc/config-tools/firewall bootp --set-if on "$interface_name" --apply up
    
    trap "/etc/config-tools/set_bootp_config $interface_name close" EXIT
fi

while [ -z "$IPADDR" ]
do
    eval $(/sbin/bootpc --dev "$interface_name" --serverbcast --returniffail --timeoutwait 0) >> /dev/null
    sleep 3
done

# Close firewall ports
if [[ $(/etc/config-tools/firewall firewall --is-enabled) == "enabled" ]]; then
    /etc/config-tools/firewall bootp --set-if off "$interface_name" --apply up
    trap "" EXIT
fi

if [[ -n "$GATEWAYS" || -n "$DNSSRVS" || -n "$NTPSRVS" || -n "$HOSTNAME" || -n "$DOMAIN" ]]; then
    > "$FILE"
fi

# Save default gateways
if [[ -n "$GATEWAYS" ]] ; then
    index=1
    for i in $GATEWAYS; do
        echo "DEFAULT_GATEWAY_$index=$i" >> "$FILE"
        index=$((index + 1))
    done
fi

# Save dns servers
if [[ -n "$DNSSRVS" ]] ; then
    index=1
    for i in $DNSSRVS; do
        echo "DNS_SERVER_$index=$i" >> "$FILE"
        index=$((index + 1))
    done
fi

# Save ntp servers
if [[ -n "$NTPSRVS" ]] ; then
    index=1
    for i in $NTPSRVS; do
        echo "NTP_SERVER_$index=$i" >> "$FILE"
        index=$((index + 1))
    done
fi

# Save hostname and dns domainname
[[ -n "$HOSTNAME" ]] && echo "DHCPHOSTNAME=$HOSTNAME" >> "$FILE"
[[ -n "$DOMAIN" ]] && echo "DHCPDOMAIN=$DOMAIN" >> "$FILE"

set_ip_config "$interface_name" temporary "$IPADDR" "$NETMASK" "$BROADCAST"
