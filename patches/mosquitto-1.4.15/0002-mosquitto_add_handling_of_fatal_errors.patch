--- mosquitto-1.4.11/lib/mosquitto.c
+++ mosquitto-1.4.11/lib/mosquitto.c
@@ -53,6 +53,7 @@
 void _mosquitto_destroy(struct mosquitto *mosq);
 static int _mosquitto_reconnect(struct mosquitto *mosq, bool blocking);
 static int _mosquitto_connect_init(struct mosquitto *mosq, const char *host, int port, int keepalive, const char *bind_address);
+static void _mosquitto_handle_fatal_error(struct mosquitto *mosq, int errorCode);
 
 int mosquitto_lib_version(int *major, int *minor, int *revision)
 {
@@ -1032,11 +1033,15 @@
 			case MOSQ_ERR_UNKNOWN:
 			case MOSQ_ERR_EAI:
 			case MOSQ_ERR_PROXY:
+				_mosquitto_log_printf(mosq, MOSQ_LOG_ERR, "mosquitto_loop_forever: fatal error %i: %s", rc, mosquitto_strerror(rc));
+				_mosquitto_handle_fatal_error(mosq, 19);
 				return rc;
 			case MOSQ_ERR_ERRNO:
 				break;
 		}
 		if(errno == EPROTO){
+			_mosquitto_log_printf(mosq, MOSQ_LOG_ERR, "mosquitto_loop_forever: fatal error errno == EPROTO, rc = %i: %s", rc, mosquitto_strerror(rc));
+			_mosquitto_handle_fatal_error(mosq, 17);
 			return rc;
 		}
 		do{
@@ -1077,6 +1082,8 @@
 			}
 		}while(run && rc != MOSQ_ERR_SUCCESS);
 	}
+	_mosquitto_log_printf(mosq, MOSQ_LOG_ERR, "mosquitto_loop_forever: Exiting with run = %i, rc = %i: %s", run, rc, mosquitto_strerror(rc));
+	_mosquitto_handle_fatal_error(mosq, 18);
 	return rc;
 }
 
@@ -1435,3 +1442,15 @@
 	return MOSQ_ERR_SUCCESS;
 }
 
+static void _mosquitto_handle_fatal_error(struct mosquitto *mosq, int errorCode)
+{
+	pthread_mutex_lock(&mosq->callback_mutex);
+	if (mosq->on_disconnect)
+	{
+		mosq->in_callback = true;
+		mosq->on_disconnect(mosq, mosq->userdata, errorCode);
+		mosq->in_callback = false;
+	}
+	pthread_mutex_unlock(&mosq->callback_mutex);
+}
+

